[{"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/index.js":"1","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/App.js":"2","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reportWebVitals.js":"3","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/layout/Navbar.js":"4","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/layout/Landing.js":"5","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/layout/Hero.js":"6","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/auth/Login.js":"7","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/auth/Register.js":"8","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/Dashboard.js":"9","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/actions/authActions.js":"10","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/actions/types.js":"11","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/utils/setAuthToken.js":"12","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/store.js":"13","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/index.js":"14","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/authReducers.js":"15","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/errorReducers.js":"16","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/private-route/PrivateRoute.js":"17","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/UserInfo.js":"18","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/WeightProgress.js":"19","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addweight/AddWeight.js":"20","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addweight/AddWeightInput.js":"21","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addweight/AddWeightDatePicker.js":"22","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addWeight/AddWeight.js":"23","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addWeight/AddWeightInput.js":"24","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addWeight/AddWeightDatePicker.js":"25","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/deleteWeights/WeightList.js":"26","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/deleteWeights/DeleteWeights.js":"27","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/deleteWeights/DeleteWeightsButton.js":"28","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/weightReducer.js":"29","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/actions/weightActions.js":"30","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/loadingReducer.js":"31"},{"size":547,"mtime":1610638737677,"results":"32","hashOfConfig":"33"},{"size":1505,"mtime":1610638737660,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1610638737682,"results":"35","hashOfConfig":"33"},{"size":1149,"mtime":1610638737675,"results":"36","hashOfConfig":"33"},{"size":587,"mtime":1610638737674,"results":"37","hashOfConfig":"33"},{"size":479,"mtime":1610638737674,"results":"38","hashOfConfig":"33"},{"size":3131,"mtime":1610638737665,"results":"39","hashOfConfig":"33"},{"size":4278,"mtime":1610638737665,"results":"40","hashOfConfig":"33"},{"size":1055,"mtime":1610732853701,"results":"41","hashOfConfig":"33"},{"size":1619,"mtime":1610638737662,"results":"42","hashOfConfig":"33"},{"size":559,"mtime":1610739274201,"results":"43","hashOfConfig":"33"},{"size":323,"mtime":1610638737684,"results":"44","hashOfConfig":"33"},{"size":319,"mtime":1610638737684,"results":"45","hashOfConfig":"33"},{"size":388,"mtime":1610735954314,"results":"46","hashOfConfig":"33"},{"size":585,"mtime":1610638737678,"results":"47","hashOfConfig":"33"},{"size":353,"mtime":1610638737680,"results":"48","hashOfConfig":"33"},{"size":590,"mtime":1610638737676,"results":"49","hashOfConfig":"33"},{"size":481,"mtime":1610730512781,"results":"50","hashOfConfig":"33"},{"size":3218,"mtime":1610688909815,"results":"51","hashOfConfig":"33"},{"size":406,"mtime":1610497036124,"results":"52","hashOfConfig":"33"},{"size":1062,"mtime":1610500123996,"results":"53","hashOfConfig":"33"},{"size":323,"mtime":1610500428284,"results":"54","hashOfConfig":"33"},{"size":720,"mtime":1610731162951,"results":"55","hashOfConfig":"33"},{"size":3073,"mtime":1610737344178,"results":"56","hashOfConfig":"33"},{"size":431,"mtime":1610730979677,"results":"57","hashOfConfig":"33"},{"size":3756,"mtime":1610739161120,"results":"58","hashOfConfig":"33"},{"size":125,"mtime":1610638737672,"results":"59","hashOfConfig":"33"},{"size":308,"mtime":1610737842603,"results":"60","hashOfConfig":"33"},{"size":887,"mtime":1610739374168,"results":"61","hashOfConfig":"33"},{"size":1823,"mtime":1610740673750,"results":"62","hashOfConfig":"33"},{"size":349,"mtime":1610736447164,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1gdo9bw",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/index.js",[],["133","134"],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/App.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reportWebVitals.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/layout/Navbar.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/layout/Landing.js",["135","136","137"],"import React, { Component } from 'react';\nimport  Hero  from \"./Hero\";\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component{\n  componentDidMount(){\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render(){\n    return (\n      <>\n      <Hero image=\"/images/hero.jpg\" text=\"Free Weight Tracker\" />\n      </>\n    )\n  }\n  \n}\nconst  mapStateToProps = state => ({\n  auth: state.auth\n}); \n\nexport default connect(mapStateToProps)(Landing);","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/layout/Hero.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/auth/Login.js",["138"],"import React, { Component } from \"react\";\nimport { Jumbotron, Container, Form, Row, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Login extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    }\n  }\n\n  componentDidMount(){\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\")\n    }\n\n    if(nextProps.errors){\n      this.setState({\n        errors: nextProps.errors\n      })\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.id] : e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    }\n    this.props.loginUser(userData)\n  }\n\n  render(){\n    const { errors } = this.state\n    return (\n      <Container style={{display:\"flex\", justifyContent:\"center\", marginTop:\"100px\"}}>\n      <Jumbotron>\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group controlId=\"email\" style={{minWidth:\"300px\"}}>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control \n            type=\"email\" \n            placeholder=\"Enter email\" \n            onChange={this.onChange}\n            value={this.state.email}\n            error={errors.email}\n            className={classnames(\"\", {invalid:errors.email || errors.emailnotfound})}\n            autoComplete=\"email\"\n            />\n          {errors.email  || errors.emailnotfound  ? <Form.Text style={{color:\"red\"}}>{errors.email}{errors.emailnotfound}</Form.Text> : <Form.Text className=\"text-muted\">Required\n          </Form.Text> }\n        </Form.Group>\n      \n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            onChange={this.onChange}\n            value={this.state.password}\n            error={errors.password}\n            autoComplete=\"current-password\"\n            className={classnames(\"\", {invalid:errors.password || errors.passwordincorrect})}\n            />\n            {errors.password || errors.passwordincorrect ? <Form.Text style={{color:\"red\"}}>{errors.password}{errors.passwordincorrect}</Form.Text> : <Form.Text className=\"text-muted\">Required\n          </Form.Text> }\n        </Form.Group>\n        <p>Not a member? <a href=\"/register\">Click here</a></p>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n        </Form>\n        </Jumbotron>\n      </Container>\n        )\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst  mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/auth/Register.js",["139"],"import React, {Component} from \"react\";\nimport { Jumbotron, Container, Form, Row, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.errors){\n      this.setState({\n        errors:nextProps.errors\n      })\n    }\n  }\n\n  componentDidMount(){\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n\n  onChange = e => {\n    this.setState({\n      [e.target.id] : e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    }\n    console.log(newUser);\n    this.props.registerUser(newUser, this.props.history)\n  }\n  render () {\n    const { errors } = this.state\n    return (\n      <Container style={{display:\"flex\", justifyContent:\"center\", marginTop:\"100px\"}}>\n      <Jumbotron>\n      <Form onSubmit={this.onSubmit}>\n      <Form.Group controlId=\"name\" style={{minWidth:\"300px\"}}>\n          <Form.Label>Name</Form.Label>\n          <Form.Control \n            onChange={this.onChange}\n            value={this.state.name}\n            error={errors.name}\n            type=\"text\" \n            className={classnames(\"\", {\n              invalid: errors.name\n            })}\n            placeholder=\"Enter your name\" \n            />\n\n          {errors.name ? <Form.Text style={{color:\"red\"}}>{errors.name}</Form.Text> : <Form.Text className=\"text-muted\">Required\n          </Form.Text> }\n        </Form.Group>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control \n            onChange={this.onChange}\n            value={this.state.email}\n            error={errors.email}\n            type=\"email\" \n            className={classnames(\"\", {\n              invalid: errors.email\n            })}\n            placeholder=\"Enter email\" \n\n            />\n          {errors.email ? <Form.Text style={{color:\"red\"}}>{errors.email}</Form.Text> : <Form.Text className=\"text-muted\">Required\n          </Form.Text> }\n        </Form.Group>\n      \n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            onChange={this.onChange}\n            value={this.state.password}\n            error={errors.password}\n            type=\"password\" \n            placeholder=\"Password\" \n            autoComplete=\"new password\"\n            className={classnames(\"\", {\n              invalid: errors.password\n            })}\n            />\n          {errors.password ? <Form.Text style={{color:\"red\"}}>{errors.password}</Form.Text> : <Form.Text className=\"text-muted\">Required\n          </Form.Text> }\n        </Form.Group>\n        <Form.Group controlId=\"password2\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control \n            onChange={this.onChange}\n            value={this.state.password2}\n            error={errors.password2}\n            type=\"password\" \n            placeholder=\"Retype Password\" \n            autoComplete=\"new password\"\n            className={classnames(\"\", {\n              invalid: errors.password2\n            })}\n            />\n          {errors.password2 ? <Form.Text style={{color:\"red\"}}>{errors.password2}</Form.Text> : <Form.Text className=\"text-muted\">Required\n          </Form.Text> }\n        </Form.Group>\n        <p>Already a member? <a href=\"/login\">Login here</a></p>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n        </Form>\n        </Jumbotron>\n      </Container>\n        )\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(Register);","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/Dashboard.js",["140","141","142","143","144"],"import React from \"react\";\nimport { Jumbotron, Container, Row, Col } from \"react-bootstrap\";\nimport UserInfo from \"./UserInfo\";\nimport AddWeight from \"./addWeight/AddWeight\";\nimport WeightList from \"./deleteWeights/WeightList\";\nimport WeightProgress from \"./WeightProgress\";\n\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addWeight } from \"../../actions/weightActions\";\nimport classnames from \"classnames\";\n\n\n\nconst Dashboard = () => {\n  \n  return (\n    <Container style={{marginTop:\"64px\", marginBottom: \"20px\"}}>\n      <Row style={{justifyContent: \"center\"}}>\n        <Col sm={12} md={6} className=\"dashboard_section\"><UserInfo /></Col>\n        <Col sm={12} md={6} className=\"dashboard_section\"><AddWeight/></Col>\n      </Row>\n      <Row style={{justifyContent: \"center\"}}>\n        <Col sm={12} md={6} className=\"dashboard_section\"><WeightList /></Col>\n        <Col sm={12} md={6} className=\"dashboard_section weight-progress\"><WeightProgress /></Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Dashboard;","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/actions/authActions.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/actions/types.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/utils/setAuthToken.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/store.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/index.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/authReducers.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/errorReducers.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/private-route/PrivateRoute.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/UserInfo.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/WeightProgress.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addweight/AddWeight.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addweight/AddWeightInput.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addweight/AddWeightDatePicker.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addWeight/AddWeight.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addWeight/AddWeightInput.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/addWeight/AddWeightDatePicker.js",["145","146"],"import React, { useState } from \"react\";\nimport DatePicker from 'react-date-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst AddWeightDatePicker = ({handleDatePickerChange, date}) => {\n  // const [value, setStartDate] = useState(new Date());\n  return (\n    <div>\n      <Calendar value={date} onChange={handleDatePickerChange} />\n    </div>\n  )\n}\n\nexport default AddWeightDatePicker;","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/deleteWeights/WeightList.js",["147"],"import React, { Component } from \"react\";\nimport AllWeights from \"./DeleteWeights\";\nimport DeleteWeightsButton from \"./DeleteWeightsButton\";\nimport { Container, Row, Col, ListGroup, ListGroupItem, Button, Spinner, Modal } from \"react-bootstrap\";\nimport { getWeights, deleteWeight, loadingData, deleteAllWeights } from  \"../../../actions/weightActions\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\nclass WeightList extends Component {\n\n  state = {\n    weights : [],\n    loading: false,\n    show: false\n  }\n\n  handleWeightDelete = (id, e) => {\n    this.props.deleteWeight(id)\n  }\n\n  componentDidMount(){\n    this.props.loadingData()\n    this.props.getWeights(this.props.auth.user.id)\n  }\n\n  handleClose = (data) => {\n   if(data === \"yes\"){\n    this.props.deleteAllWeights(this.props.auth.user.id)\n    // console.log(\"you have picked yes\")\n   }\n    this.setState({\n      show: false\n    })\n  }\n\n  handleShow = () => {\n    this.setState({\n      show: true\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    \n    if(prevProps.user_measures.weightList !== this.props.user_measures.weightList){\n\n      this.setState({\n        weights: this.props.user_measures.weightList,\n      })\n    }\n\n    if(prevProps.errors !== this.props.errors){\n      this.setState({\n        weights: prevState.weights,\n      })\n    }\n    if(prevProps.loading !== this.props.loading){\n      this.setState({\n        loading: this.props.loading\n      })\n    }\n  }\n  render(){\n    return (\n      <Container>\n        <Row>\n        \n          <Col sm={12} md={8}>\n            <h2 style={{color:\"white\"}}>ALL WEIGHTS</h2>\n            <ListGroup style={{height: \"290px\", overflowY:\"auto\"}} className=\"allweights-scrollbar\">\n            \n            {this.state.loading ? <div style={{textAlign:\"center\", color:\"white\", position:\"absolute\", top:\"50%\", left:\"0\", right:\"0\"}}><Spinner animation=\"border\" /> </div> : this.state.weights && this.state.weights.length > 0 ? this.state.weights.sort( (a, b) => new Date(b.measure_date) - new Date(a.measure_date)).map( (user, i) => \n            <ListGroupItem style={{paddingTop:\"5px\", paddingBottom:\"5px\"}} key={i}><div style={{display:\"flex\", justifyContent:\"space-between\"}}><span style={{fontSize:\"25px\"}}><b>{user.weight} lbs</b></span><Button onClick={this.handleWeightDelete.bind(this, user._id)} variant=\"danger\"><i className=\"far fa-trash-alt\"></i></Button></div>\n            <span style={{fontSize:\"12px\", marginBottom:\"0\", color:\"#39424d\"}}>{moment(user.measure_date).format('MMMM Do YYYY')}</span></ListGroupItem> ): <div style={{textAlign:\"center\", color:\"white\", position:\"absolute\", top:\"50%\", left:\"0\", right:\"0\"}}>You Have No Weights Added</div>  }\n           \n            \n            </ListGroup>\n          </Col>\n          <Col sm={12} md={4}><DeleteWeightsButton handleShow={this.handleShow} /></Col>\n        </Row>\n        <Modal show={this.state.show} onHide={this.handleClose.bind(this, \"no\")}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Weights</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to delete all weights?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.handleClose.bind(this, \"no\")}>\n            No\n          </Button>\n          <Button variant=\"primary\" onClick={this.handleClose.bind(this, \"yes\")}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  user_measures : state.user_measures,\n  auth: state.auth,\n  errors: state.errors,\n  weight: state.weight,\n  loading: state.loading\n})\nexport default connect(mapStateToProps,{ getWeights, deleteWeight, loadingData, deleteAllWeights })(WeightList);","/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/deleteWeights/DeleteWeights.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/components/dashboard/deleteWeights/DeleteWeightsButton.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/weightReducer.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/actions/weightActions.js",[],"/Users/mendoza/Desktop/webapps/freeweighttracker/client/src/reducers/loadingReducer.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":15},{"ruleId":"152","severity":1,"message":"156","line":3,"column":17,"nodeType":"154","messageId":"155","endLine":3,"endColumn":23},{"ruleId":"152","severity":1,"message":"157","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":17},{"ruleId":"152","severity":1,"message":"158","line":2,"column":38,"nodeType":"154","messageId":"155","endLine":2,"endColumn":41},{"ruleId":"152","severity":1,"message":"158","line":2,"column":38,"nodeType":"154","messageId":"155","endLine":2,"endColumn":41},{"ruleId":"152","severity":1,"message":"159","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":19},{"ruleId":"152","severity":1,"message":"157","line":9,"column":8,"nodeType":"154","messageId":"155","endLine":9,"endColumn":17},{"ruleId":"152","severity":1,"message":"160","line":10,"column":10,"nodeType":"154","messageId":"155","endLine":10,"endColumn":17},{"ruleId":"152","severity":1,"message":"161","line":11,"column":10,"nodeType":"154","messageId":"155","endLine":11,"endColumn":19},{"ruleId":"152","severity":1,"message":"162","line":12,"column":8,"nodeType":"154","messageId":"155","endLine":12,"endColumn":18},{"ruleId":"152","severity":1,"message":"163","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"164","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":18},{"ruleId":"152","severity":1,"message":"165","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":18},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'PropTypes' is defined but never used.","'Row' is defined but never used.","'Jumbotron' is defined but never used.","'connect' is defined but never used.","'addWeight' is defined but never used.","'classnames' is defined but never used.","'useState' is defined but never used.","'DatePicker' is defined but never used.","'AllWeights' is defined but never used.","no-global-assign","no-unsafe-negation"]